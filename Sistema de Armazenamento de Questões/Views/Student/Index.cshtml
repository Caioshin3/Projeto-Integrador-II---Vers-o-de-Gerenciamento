@model List<Sistema_de_Armazenamento_de_Questões.Models.StudentModel>
@{
    ViewData["Title"] = "Lista de Alunos";
}

<div class="container">
    <div class="row mb-4">
        <div class="col">
            <h1 class="display-5">Lista de Alunos</h1>
        </div>
        <div class="col-auto">
            <a href="@Url.Action("CreateStudent", "Student")" class="btn btn-success">
                <i class="fas fa-plus-circle me-2"></i>Cadastrar Novo Aluno
            </a>
        </div>
    </div>

    <!-- Barra de pesquisa e filtros -->
    <div class="row mb-4">
        <div class="col-md-6">
            <div class="input-group">
                <input type="text" id="searchInput" class="form-control" placeholder="Buscar alunos...">
                <button class="btn btn-outline-secondary" type="button" onclick="searchStudents()">
                    <i class="fas fa-search"></i>
                </button>
            </div>
        </div>
        <div class="col-md-4">
            <select id="schoolFilter" class="form-select" onchange="filterStudents()">
                <option value="">Filtrar por Escola</option>
                @if (ViewBag.Schools != null)
                {
                    foreach (var school in ViewBag.Schools)
                    {
                        <option value="@school.Id">@school.Name</option>
                    }
                }
            </select>
        </div>
        <div class="col-md-2">
            <select id="yearFilter" class="form-select" onchange="filterStudents()">
                <option value="">Ano Escolar</option>
                @for (int i = 1; i <= 12; i++)
                {
                    <option value="@i">@i° Ano</option>
                }
            </select>
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (Model == null || !Model.Any())
    {
        <div class="alert alert-warning" role="alert">
            <i class="fas fa-exclamation-triangle me-2"></i>Nenhum aluno cadastrado.
        </div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead class="table-light">
                    <tr>
                        <th>ID</th>
                        <th>Nome</th>
                        <th>Data de Nascimento</th>
                        <th>Ano Escolar</th>
                        <th>Escola</th>
                        <th>Performance</th>
                        <th class="text-center">Ações</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var student in Model)
                    {
                        <tr>
                            <td>@student.Id</td>
                            <td>@student.Name</td>
                            <td>@student.BirthDate.ToString("dd/MM/yyyy")</td>
                            <td>@student.schoolYear° Ano</td>
                            <td>
                                @{
                                    // Usando a tabela de associação StudentSchool
                                    var studentSchools = ViewBag.StudentSchools as Dictionary<int, List<Sistema_de_Armazenamento_de_Questões.Models.SchoolModel>>;

                                    if (studentSchools != null && studentSchools.ContainsKey(student.Id) && studentSchools[student.Id].Any())
                                    {
                                        var schools = studentSchools[student.Id];
                                        <ul class="list-unstyled">
                                            @foreach (var school in schools)
                                            {
                                                <li>@school.Name</li>
                                            }
                                        </ul>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Sem escola</span>
                                    }
                                }
                            </td>
                            <td>
                                @if (ViewData["StudentExams"] != null)
                                {
                                    var examsDictionary = (Dictionary<int, List<Sistema_de_Armazenamento_de_Questões.Models.ExamModel>>)ViewData["StudentExams"];
                                    if (examsDictionary.ContainsKey(student.Id) && examsDictionary[student.Id].Any())
                                    {
                                        <div class="dropdown">
                                            <button class="btn btn-info btn-sm dropdown-toggle" type="button" id="dropdownMenuButton@(student.Id)" data-bs-toggle="dropdown" aria-expanded="false">
                                                Ver Performance
                                            </button>
                                            <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton@(student.Id)">
                                                @foreach (var exam in examsDictionary[student.Id])
                                                {
                                                    <li>
                                                        <a class="dropdown-item" href="@Url.Action("Performance", "Student", new { studentId = student.Id, examId = exam.Id })">
                                                            @exam.Title
                                                        </a>
                                                    </li>
                                                }
                                            </ul>
                                        </div>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Sem exames</span>
                                    }
                                }
                                else
                                {
                                    <span class="text-muted">Dados não disponíveis</span>
                                }
                            </td>
                            <td class="text-center">
                                <div class="btn-group" role="group">
                                    <a href="@Url.Action("Edit", "Student", new { id = student.Id })" class="btn btn-outline-warning btn-sm" title="Editar">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <button type="button" class="btn btn-outline-danger btn-sm" title="Excluir"
                                            onclick="confirmDelete(@student.Id, '@student.Name')">
                                        <i class="fas fa-trash-alt"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Paginação -->
        <nav aria-label="Navegação de páginas">
            <ul class="pagination justify-content-center">
                <li class="page-item disabled">
                    <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Anterior</a>
                </li>
                <li class="page-item active"><a class="page-link" href="#">1</a></li>
                <li class="page-item"><a class="page-link" href="#">2</a></li>
                <li class="page-item"><a class="page-link" href="#">3</a></li>
                <li class="page-item">
                    <a class="page-link" href="#">Próximo</a>
                </li>
            </ul>
        </nav>
    }
</div>

<!-- Modal de Confirmação de Exclusão -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteModalLabel">Confirmar Exclusão</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Tem certeza que deseja excluir o aluno <strong id="studentName"></strong>?</p>
                <p class="text-danger"><small>Esta ação não pode ser desfeita e todos os dados relacionados ao aluno serão removidos.</small></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <form id="deleteForm" method="post">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">Excluir</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Função para confirmar exclusão
        function confirmDelete(id, name) {
            document.getElementById('studentName').textContent = name;
            document.getElementById('deleteForm').action = '@Url.Action("Delete", "Student")/' + id;

            var deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
            deleteModal.show();
        }

        // Função para pesquisar alunos
        function searchStudents() {
            var input = document.getElementById('searchInput').value.toLowerCase();
            var rows = document.getElementsByTagName('tbody')[0].getElementsByTagName('tr');

            for (var i = 0; i < rows.length; i++) {
                var studentName = rows[i].getElementsByTagName('td')[1].textContent.toLowerCase();
                if (studentName.indexOf(input) > -1) {
                    rows[i].style.display = "";
                } else {
                    rows[i].style.display = "none";
                }
            }
        }

        // Função para filtrar alunos
        function filterStudents() {
            var schoolFilter = document.getElementById('schoolFilter').value;
            var yearFilter = document.getElementById('yearFilter').value;
            var rows = document.getElementsByTagName('tbody')[0].getElementsByTagName('tr');

            for (var i = 0; i < rows.length; i++) {
                var schoolCell = rows[i].getElementsByTagName('td')[4];
                var yearCell = rows[i].getElementsByTagName('td')[3].textContent;
                var display = true;

                if (schoolFilter && schoolCell.textContent.indexOf(schoolFilter) === -1) {
                    display = false;
                }

                if (yearFilter && !yearCell.startsWith(yearFilter + "°")) {
                    display = false;
                }

                rows[i].style.display = display ? "" : "none";
            }
        }

        // Detectar entrada no campo de pesquisa
        document.getElementById('searchInput').addEventListener('keyup', function(event) {
            if (event.key === 'Enter') {
                searchStudents();
            }
        });
    </script>
}